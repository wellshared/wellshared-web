buildscript {
	ext {
		springBootVersion = '1.5.9.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

plugins {
	id "com.moowork.node" version "1.2.0"
}
apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'com.moowork.node'
apply plugin: 'org.springframework.boot'

group = 'com.segfault16'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}

task cleanResources(type: Delete) {
    delete 'build/resources'
}
node {
    version = '10.9.0'
    npmVersion = '6.5.0'
    download = true
	workDir = file("${project.buildDir}/node")
    nodeModulesDir = file("${project.projectDir}")
}

task webpackBuildDev(type: NpmTask, dependsOn: 'npm_install') {
    args = ["run", "build"]
}

compileJava.dependsOn processResources
processResources.dependsOn cleanResources

task copyIntoStatic (type: Copy) {
    from 'dist/ws-web/'
    into 'build/resources/main/static'
}
processResources.dependsOn webpackBuildDev
copyIntoStatic.dependsOn webpackBuildDev


dependencies {
	/// SPRING BOOT
	compile('org.springframework.boot:spring-boot-starter')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-mail')
	compile('org.springframework.boot:spring-boot-starter-thymeleaf')
	compile("org.springframework.boot:spring-boot-starter-security")
	compile('org.springframework.boot:spring-boot-starter-web')
	compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile ('com.amazonaws:aws-java-sdk-ec2:1.11.465')
    compile ('com.amazonaws:aws-java-sdk-s3:1.11.465')
    compile ('com.amazonaws:aws-java-sdk-dynamodb:1.11.465')
	compile("mysql:mysql-connector-java")
	testCompile('org.springframework.boot:spring-boot-starter-test')
}
